name: CML Model Comparison Pipeline

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  train-compare-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train all models
        run: |
          python train_experiments.py

      - name: Compare models and generate report assets
        run: |
          python compare_models.py

      - name: Install CML
        run: npm install -g @dvcorg/cml

      - name: Build markdown report
        shell: bash
        run: |
          {
            echo "# üèÜ Rapport de Comparaison de Mod√®les - Exercice 3"
            echo
            echo "## üéØ Meilleur Mod√®le S√©lectionn√©"
            echo
            echo '```json'
            cat experiments/best_model.json
            echo '```'
            echo
            echo "## üìä Comparaison des Accuracy"
            echo
            echo "![accuracy](reports/accuracy_comparison.png)"
            echo
            echo "## üìà Comparaison de Toutes les M√©triques"
            echo
            echo "![all-metrics](reports/all_metrics_comparison.png)"
            echo
            echo "## üî• Heatmap des Performances"
            echo
            echo "![heatmap](reports/performance_heatmap.png)"
            echo
            echo "## üìã R√©sultats D√©taill√©s"
            echo
            echo "<details>"
            echo "<summary>Cliquez pour voir tous les r√©sultats</summary>"
            echo
            echo '```json'
            cat experiments/all_results.json
            echo '```'
            echo "</details>"
          } > report.md

      - name: Post CML comment (PR or commit)
        env:
          # Prefer a PAT in CML_TOKEN for forked PRs; fallback to GITHUB_TOKEN for pushes/same-repo PRs
          REPO_TOKEN: ${{ secrets.CML_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          # Try to comment on the PR; if not a PR or insufficient permission, comment on the commit
          cml comment create --pr report.md || cml comment create --commit report.md
